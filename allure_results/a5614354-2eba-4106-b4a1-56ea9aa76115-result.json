{"name": "test_several_at_once", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test.TestQuestionsAbout object at 0x000002A42D853358>\n\n    def test_several_at_once(self): #Хочу сразу несколько самокатов! Так можно?\n        self.driver.get('https://qa-scooter.praktikum-services.ru/')\n        questions=Questions_about(self.driver)\n        self.driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n        time.sleep(2)\n        questions.wait_several_at_once()\n        questions.clik_several_at_once()\n>       questions.wait_one_scooter()\n\ntest.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPageObgect.py:58: in wait_one_scooter\n    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located(self.one_scooter))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2a6bf81c-bd6d-4e19-8a31-386dc4fe13b3\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002A42D93F2F0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException"}, "start": 1660839217229, "stop": 1660839225665, "uuid": "9234ec4b-233b-4685-8bc2-a1367992c972", "historyId": "899efcbf476561ad80c0adc8c4ded6ab", "testCaseId": "264f31f18c9e50710e912313fd595e28", "fullName": "test.TestQuestionsAbout#test_several_at_once", "labels": [{"name": "suite", "value": "test"}, {"name": "subSuite", "value": "TestQuestionsAbout"}, {"name": "host", "value": "DESKTOP-63FOO5G"}, {"name": "thread", "value": "18936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test"}]}